//1. Create a collection named orders.

db.createCollection("orders");

//2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.

db.orders.insert([
{orderDate: new Date("2001-01-01"),
 orderTotal:1000,
 lineItem:[{unitPrice:100}, {qty:100}, {productName:'clorox'}]},
{orderDate: new Date("2002-02-02"),
 orderTotal:2000,
 lineItem:[{unitPrice:200}, {qty:100}, {productName:'bread'}]},
{orderDate: new Date("2003-03-03"),
 orderTotal:3000,
 lineItem:[{unitPrice:300}, {qty:100}, {productName:'tin cans'}]}
 ]);

//3. Find a single order document, any order document.

db.orders.findOne();

//4. Find all orders and make them look pretty.

db.orders.find().pretty();

//5. Find all orders with an orderDate that is prior to 1/1/2016.

db.orders.find({
  orderDate: {$lt: new Date("2016-01-01")}
  });

//6. Find all orders with an orderDate that is after 1/1/2016.

db.orders.find({
  orderDate: {$gt: new Date("2016-01-01")}
  });

//7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and.

db.orders.find(
    { $and:  [ { "lineItem.qty" : { $gt : 5 } }, { "lineItem.qty" : { $lt : 100 } } ] }
    );

//8. Update one of your line items to 42.99. HINT: Look at dot notation

db.orders.update(
{_id:ObjectId("57475e36af57c32855fa5084")}, {$set: {"lineItem.0":{unitPrice: 42.99}}}
);

//9. Remove one of your orders.

db.orders.remove({_id:ObjectId("57475e36af57c32855fa5083")});
